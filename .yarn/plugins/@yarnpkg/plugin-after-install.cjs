/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-after-install",
factory: function (require) {
var plugin=(()=>{var b=Object.create,f=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var j=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var N=(t,o,e)=>o in t?f(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e;var v=t=>f(t,"__esModule",{value:!0});var r=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var T=(t,o)=>{for(var e in o)f(t,e,{get:o[e],enumerable:!0})},R=(t,o,e)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of H(o))!A.call(t,n)&&n!=="default"&&f(t,n,{get:()=>o[n],enumerable:!(e=P(o,n))||e.enumerable});return t},a=t=>R(v(f(t!=null?b(j(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var i=(t,o,e)=>(N(t,typeof o!="symbol"?o+"":o,e),e);var S={};T(S,{default:()=>E});var d=a(r("@yarnpkg/core")),C={afterInstall:{description:"Hook that will always run after install",type:d.SettingsType.STRING,default:""},afterInstallNoMode:{description:"Hook that will run after install if no mode has been set",type:d.SettingsType.STRING,default:""},afterInstallMode:{description:"Hook that will run after install if a mode has been set",type:d.SettingsType.STRING,default:""}};var I=a(r("clipanion")),h=a(r("@yarnpkg/core"));var x=a(r("@yarnpkg/shell")),s=async(t,o,e)=>{var g;let n=t.get(e?"afterInstallMode":"afterInstallNoMode"),l=!!((g=t.projectCwd)==null?void 0:g.endsWith(`dlx-${process.pid}`));return n&&!l?(o&&console.log("Running `afterInstall` hook..."),(0,x.execute)(n,[],t.projectCwd?{cwd:t.projectCwd}:void 0)):0},m=async(t,o)=>{var l;let e=t.get("afterInstall"),n=!!((l=t.projectCwd)==null?void 0:l.endsWith(`dlx-${process.pid}`));return e&&!n?(o&&console.log("Running `afterInstall` hook..."),(0,x.execute)(e,[],t.projectCwd?{cwd:t.projectCwd}:void 0)):0};var c=class extends I.Command{async execute(){let o=await h.Configuration.find(this.context.cwd,this.context.plugins);return s(o,!1,!0)}};i(c,"paths",[["after-install-mode"]]);var k=a(r("clipanion")),w=a(r("@yarnpkg/core"));var p=class extends k.Command{async execute(){let o=await w.Configuration.find(this.context.cwd,this.context.plugins);return m(o,!1)}};i(p,"paths",[["after-install"]]);var y=a(r("clipanion")),M=a(r("@yarnpkg/core"));var u=class extends y.Command{async execute(){let o=await M.Configuration.find(this.context.cwd,this.context.plugins);return s(o,!1,!1)}};i(u,"paths",[["after-install-no-mode"]]);var D={configuration:C,commands:[p,c,u],hooks:{afterAllInstalled:async(t,o)=>{if(await m(t.configuration,!0))throw new Error("The `afterInstall` hook failed, see output above.");let n=o.mode!==void 0;if(await s(t.configuration,!0,n))throw new Error(`The \`afterInstall${n?"":"No"}Mode\` hook failed, see output above.`)}}},E=D;return S;})();
return plugin;
}
};
